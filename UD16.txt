1.1
select nombre
from articulos
1.2
select nombre, precio
from articulos
1.3
select nombre, precio
from articulos
where precio <= 200
1.4
select nombre, precio
from articulos
where precio <= 120 and precio >= 60
1.5
select nombre, precio*166.386 as "Precio en pesetas"
from articulos
1.6
select avg(precio) as "Precio medio"
from articulos
1.7
select avg(precio) as "Precio medio codigo 2"
from articulos
where codigo = 2
1.8
select count(nombre) as "Numero articulos"
from articulos
where precio >= 180
1.9
select nombre, precio
from articulos
where precio >= 180 
order by precio desc, nombre asc
1.10
select A.nombre, F.nombre
from articulos A join fabricantes F on (A.fabricante)
1.11
select A.nombre, A.precio, F.nombre
from articulos A join fabricantes F on (A.fabricante)
1.12
select F.codigo, avg(A.precio) AS "precio medio"
from articulos A join fabricantes F on (A.fabricante)
group by A.fabricante, F.codigo
1.13
select F.nombre, avg(A.precio) AS "precio medio"
from articulos A join fabricantes F on (A.fabricante)
group by A.fabricante, F.codigo
1.14
select F.nombre
from articulos A join fabricantes F on (A.fabricante)
group by F.nombre
having avg(A.PRECIO) >= 150
1.15
select nombre, min(precio)
from articulos
group by nombre
1.16
select F.nombre, A.PRECIO
from articulos A join fabricantes F on (A.fabricante)
where A.precio = (select max(precio) from articulos)
group by F.codigo, A.PRECIO
1.17
insert into articulos (codigo, nombre, precio, fabricante) values
(11, 'Altavoces', 70, 2)
1.18
update articulos set nombre='Impresora Laser' where codigo=8
1.19
update articulos set precio=precio-(precio*0.1)
1.20
update articulos set precio=(precio-10) where precio >= 120

2.1
select APELLIDOS from empleados
2.2
select APELLIDOS 
from empleados
group by APELLIDOS
2.3
select * 
from empleados
where APELLIDOS = "López"
2.4
select * 
from empleados
where APELLIDOS = "López" OR Apellidos = "Pérez"
2.5
select * 
from empleados
where departamento = 14
2.6
select * 
from empleados
where departamento = 37 or departamento = 77
2.7
select * 
from empleados
where apellidos like "P%"
2.8
select SUM(presupuesto) 
from departamentos
2.9
select count(DNI) 
from empleados
group by departamento
2.10
select e.*, d.* 
from empleados e join departamentos d on(e.departamento=d.codigo)
2.11
select e.NOMBRE, e.APELLIDOS, d.NOMBRE as "Nombre departamento", d. PRESUPUESTO 
from empleados e join departamentos d on(e.departamento=d.codigo)
2.12
select e.nombre, e.apellidos
from empleados e
where (select d.presupuesto 
		from departamentos d
        where e.departamento=d.codigo) 
        >= 60000		
2.13
select * 
from departamentos
where presupuesto > (select AVG(presupuesto)
			from departamentos)
2.14
SELECT d.nombre 
FROM departamentos d
left join empleados e on (d.codigo=e.departamento)
where e.departamento >= 2
2.15
insert into departamentos(CODIGO, nombre, presupuesto) values(11, "Calidad", 40000)
insert into empleados(dni, nombre, apellidos, departamento) values(89267109, "Esther", "Vázquez", 11)
2.16
UPDATE departamentos
SET presupuesto = presupuesto - (presupuesto * 0.10)
2.17
UPDATE empleados
SET departamento = 14
where departamento = 77
2.18
delete from empleados where DEPARTAMENTO = 14
2.19
delete e
from empleados  e
join departamentos d on (e.departamento=d.codigo)
where d.presupuesto >= 60000
2.20
delete from empleados
3.1
select * from almacenes
3.2
select * from cajas
where valor > 150
3.3
select contenido
from cajas
3.4
select avg(valor)
from cajas
3.5
select avg(valor)
from cajas
group by almacen
3.6
select almacen
from cajas
group by almacen
having avg(valor)>150
3.7
select cajas.numreferencia, almacenes.lugar
from cajas
inner join almacenes on codigo=ALMACEN
3.8
select almacenes.codigo , count(cajas.numreferencia)
from cajas c
inner join almacenes s on a.almacen=c.codigo
group by almacenes.codigo
3.9
select codigo
from almacenes
where capacidad <(
select count(*)
from cajas
where almacen=codigo)
No funca
3.10
select a.lugar, c.numreferencia
from cajas c join almacenes a on c.almacen=a.codigo
where a.lugar = 'bilbao'
3.11
insert into almacenes(codigo,lugar, capacidad) values
(6, 'Barcelona', 3)
3.12
insert into cajas(numreferencia,contenido, valor, almacen) values
('H5RT', 'Papel', 200, 2)
3.13
update cajas set valor=valor-(valor*0.15)
3.14
update cajas set valor=valor-(valor*0.20)
where valor>(select avg(valor) from cajas) 
No funca
3.15
delete from cajas
where valor<100
3.16
delete from cajas where almacen in
(select codigo from almacenes where capacidad>( select count(*) from cajas where almacen = codigo ))
4.1
select nombre
from peliculas
4.2
select CALIFICACIONEDAD
from peliculas
4.3
select nombre, CALIFICACIONEDAD
from peliculas
where CALIFICACIONEDAD is null
4.4
select codigo,nombre, pelicula
from salas
where pelicula is null
4.5
select s.codigo,s.nombre, s.pelicula, p.NOMBRE, p.CALIFICACIONEDAD
from salas s join peliculas p on (p.codigo = s.pelicula)
4.6
select p.codigo,p.nombre, p.CALIFICACIONEDAD, s.pelicula, s.NOMBRE
from salas s join peliculas p on (p.codigo = s.pelicula)
order by p.codigo
4.7
select p.nombre
from salas s right join peliculas p on (p.codigo = s.pelicula)
where s.pelicula is null;
4.8
insert into peliculas (CODIGO, nombre, CALIFICACIONEDAD) values (10, 'Uno, Dos, Tres', 'Mayores 7')
4.9
update peliculas set CALIFICACIONEDAD = 'No recomendables para -13' where CALIFICACIONEDAD is null
4.10
delete from salas where pelicula in (select codigo
				     from peliculas
				     where CALIFICACIONEDAD = 'G')